/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.22-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.corellana.pokedex.api;

import com.corellana.pokedex.model.PokemonListTO;
import com.corellana.pokedex.exceptions.PokedexException;
import com.corellana.pokedex.model.PokemonDetailsTO;
import com.corellana.pokedex.model.PokemonTO;
import io.swagger.annotations.*;

import javax.validation.Valid;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;


@Validated
@Api(value = "pokemon")
@RequestMapping(value = "/pokedex")
public interface PokemonApi {

    @ApiOperation(value = "Muestra el listado de pokemones", nickname = "pokedex", notes = "Lista de Pokemones", response = PokemonTO.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "respuesta del servicio", response = PokemonTO.class, responseContainer = "List"),
        @ApiResponse(code = 500, message = "Error Interno") })
    @GetMapping(value = {"", "/", "/pokemon"},
        produces = { "application/json" })
    ResponseEntity<PokemonListTO> pokedex(@ApiParam(value = "Cantidad de resultados", defaultValue = "20") @Valid @RequestParam(value = "limit", required = false, defaultValue="20") Integer limit, @ApiParam(value = "Comienzo de resultados", defaultValue = "0") @Valid @RequestParam(value = "offset", required = false, defaultValue="0") Integer offset) throws PokedexException;


    @ApiOperation(value = "Muestra detalle de un pokemon", nickname = "pokemon", notes = "Detalle de pokemon", response = PokemonDetailsTO.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "respuesta del servicio", response = PokemonDetailsTO.class),
        @ApiResponse(code = 400, message = "Id de pokemon inv√°lido"),
        @ApiResponse(code = 404, message = "Pokemon no encontrado"),
        @ApiResponse(code = 500, message = "Error Interno") })
    @GetMapping(value = "/pokemon/{id}",
        produces = { "application/json" })
    ResponseEntity<PokemonDetailsTO> pokemon(@ApiParam(value = "pokemonId",required=true) @PathVariable("id") Integer id) throws PokedexException;

}
